/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VisorDeMarcasPanel.java
 *
 * Created on 29/03/2009, 12:41:41 PM
 */

package com.pmarlen.client.view;

import java.awt.Component;
import javax.swing.Icon;
import javax.swing.JTree;
import javax.swing.KeyStroke;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreeSelectionModel;
import org.springframework.stereotype.Controller;

/**
 *
 * @author alfred
 */
public class VisorDeMarcasPanel extends javax.swing.JPanel {

    /** Creates new form VisorDeMarcasPanel */
    public VisorDeMarcasPanel() {
        initComponents();
        marcasJTree.getSelectionModel().
                setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        KeyStroke ks = KeyStroke.getKeyStroke("ctrl A");
        marcasJTree.getInputMap().put(ks, "none");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        marcasJTree = new javax.swing.JTree();
        panelVisorContainer = VisorDeProductosPanelFactory.getVisorDeProductosPanel();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(3);

        marcasJTree.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                marcasJTreeFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(marcasJTree);

        jSplitPane1.setLeftComponent(jScrollPane1);
        jSplitPane1.setRightComponent(panelVisorContainer);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void marcasJTreeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_marcasJTreeFocusGained
        //marcasJTree.setSelectionBackground(Color.GREEN);
    }//GEN-LAST:event_marcasJTreeFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTree marcasJTree;
    private javax.swing.JPanel panelVisorContainer;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the marcasJTree
     */
    public javax.swing.JTree getMarcasJTree() {
        return marcasJTree;
    }

    /**
     * @return the panelVisorContainer
     */
    public javax.swing.JPanel getPanelVisorContainer() {
        return panelVisorContainer;
    }

    private class MarcvaCellRender extends DefaultTreeCellRenderer {

        Icon tutorialIcon;

        public MarcvaCellRender(Icon icon) {
            tutorialIcon = icon;
        }

        public Component getTreeCellRendererComponent(
                JTree tree,
                Object value,
                boolean sel,
                boolean expanded,
                boolean leaf,
                int row,
                boolean hasFocus) {

            super.getTreeCellRendererComponent(
                    tree, value, sel,
                    expanded, leaf, row,
                    hasFocus);
            if (leaf && isTutorialBook(value)) {
                setIcon(tutorialIcon);
                setToolTipText("This book is in the Tutorial series.");
            } else {
                setToolTipText(null); //no tool tip
            }

            return this;
        }

        protected boolean isTutorialBook(Object value) {
//            DefaultMutableTreeNode node =
//                    (DefaultMutableTreeNode) value;
//            //BookInfo nodeInfo = (BookInfo) (node.getUserObject());
//            String title = nodeInfo.bookName;
//            if (title.indexOf("Tutorial") >= 0) {
//                return true;
//            }

            return false;
        }
    }

}
